   27  clear
   28  '''$USER'''
   29  ''$USER''
   30  ''$HOME''
   31  '$HOME'
   32  ''$HOME''
   33  ''''$HOME''''
   34  ''''$USER''''
   35  ''''$HOME''''
   36  clear
   37  ls
   38  ls
   39  clear
   40  ""$USER""
   41  ""'$USER'""
   42  ""'''$USER'''""
   43  ''"$USER"''
   44  clear
   45  ls
   46  clear
   47  "'$NOME'"
   48  "'$USER'"
   49  "''$USER''"
   50  clear
   51  export A='ls -l'
   52  $A
   53  '$A'
   54  ''$A''
   55  clear
   56  ''$A''
   57  clear
   58  bash
   59  clear
   60  clear
   61  '""$USER""'
   62  '""$USER""'
   63  '"$USER"'
   64  clear
   65  '"$USER"'
   66  ""$USER""
   67  clear
   68  greap um << 
   69  greap um << 
   70  clear
   71  git pull
   72  clear
   73  ls
   74  clear
   75  clear
   76  ls
   77  clear
   78  ls
   79  clear
   80  git pull
   81  clear
   82  make fclean
   83  clear
   84  make re
   85  clear
   86  make fclean
   87  clear
   88  make r
   89  make re
   90  make r
   91  exit
   92  clear
   93  make clean
   94  clear
   95  ls
   96  clear
   97  ls
   98  clear
   99  ls
  100  clear
  101  ls
  102  clear
  103  ls
  104  clear
  105  git pull
  106  clear
  107  ls
  108  clear
  109  ls
  110  clear
  111  ls
  112  clear
  113  ls
  114  clear
  115  make r
  116  clear
  117  clear
  118  clear
  119  make r
  120  make r
  121  clear
  122  clear
  123  make r
  124  make r
  125  cleargkljhr;kahsdf
  126  clear
  127  ls
  128  exit
  129  clear
  130  clear
  131  cat << F
  132  clear
  133  ls
  134  clear
  135  cat Makefile 
  136  clear
  137  ls
  138  clear
  139  ls
  140  clear
  141  clear
  142  clear
  143  ls
  144  clear
  145  git pull
  146  clear
  147  ls
  148  clear
  149  git pull
  150  clear
  151  make re
  152  make clean
  153  clear
  154  ./minishell
  155  clear
  156  git pull
  157  clear
  158  make re
  159  make fclean
  160  clear
  161  ls
  162  clear
  163  make re
  164  clear
  165  make clean
  166  clear
  167  ./minishell
  168  clear
  169  ls
  170  clear
  171  git pull
  172  clear
  173  git status
  174  make fclean
  175  clear
  176  git status
  177  clear
  178  git status
  179  git rm libft/libft.a
  180  clear
  181  git status
  182  git rm minishell
  183  clear
  184  git status
  185  rm .swp 
  186  clear
  187  git status
  188  clear
  189  git status
  190  git commit -m "remover extra"
  191  clear
  192  git push
  193  clear
  194  git status
  195  clear
  196  git status
  197  git push
  198  clear
  199  cd ..
  200  clear
  201  ls
  202  rm -rf Minishell/
  203  clear
  204  ls
  205  clear
  206  git clone --branch builtins --single-branch git@github.com:NdondaDaniel2020/Minishell.git
  207  clear
  208  ls
  209  cd Minishell/
  210  clear
  211  ls
  212  clear
  213  make
  214  make re
  215  clear
  216  ls
  217  clear
  218  make clean
  219  clear
  220  ls
  221  clear
  222  ls
  223  clear
  224  ls
  225  clear
  226  make re
  227  clear
  228  ./minishell
  229  clear
  230  cat Makefile | wc -l
  231  clear
  232  echo | 
  233  clear
  234  ls
  235  clear
  236  ls
  237  clear
  238  ls
  239  clear
  240  ls
  241  clear
  242  ls
  243  clear
  244  clear
  245  git clone --branch builtins --single-branch git@github.com:NdondaDaniel2020/Minishell.git
  246  clear
  247  cd Minishell/
  248  clear
  249  clear
  250  ls
  251  clear
  252  ls
  253  clear
  254  ls
  255  clear
  256  ls
  257  make re
  258  clear
  259  clear
  260  valgrind --leak-check=full --show-leak-kinds=all --suppressions=./minishell_tester/local.supp --trace-children=yes --track-origins=yes --track-fds=yes -s ./minishell
  261  exit
  262  valgrind --leak-check=full --show-leak-kinds=all --suppressions=./minishell_tester/local.supp --trace-children=yes --track-origins=yes --track-fds=yes -s ./minishell
  263  clear
  264  make re
  265  clear
  266  make re
  267  ls
  268  clear
  269  cd Minishell/
  270  clear
  271  make re
  272  clear
  273  valgrind --leak-check=full --show-leak-kinds=all --suppressions=./minishell_tester/local.supp --trace-children=yes --track-origins=yes --track-fds=yes -s ./minishell
  274  valgrind --leak-check=full --show-leak-kinds=all --suppressions=./minishell_tester/local.supp --trace-children=yes --track-origins=yes --track-fds=yes -s ./minishell
  275  clear
  276  valgrind --leak-check=full --show-leak-kinds=all --suppressions=./minishell_tester/local.supp --trace-children=yes --track-origins=yes --track-fds=yes -s ./minishell
  277  clear
  278  ./minishell
  279  clear
  280  clear
  281  static int	adjust_position_variation(int pos, char *sub, char *str)
  282  { 	int len; 	len = ft_strlen(str);
  283  	if (pos == 0); 		pos = ft_strlen(sub);
  284  	if (str[pos] == '$'); 		pos++; 	while ((pos < len) && (ft_isalpha(str[pos])
  285  		|| str[pos] == '?'|| str[pos] == '_'))
  286  		pos++;
  287  	pos += ft_strlen(sub);
  288  	return (pos);
  289  }
  290  static void	join_value_env(char **join, char *value_env)
  291  { 	if ((*join) == NULL)
  292  		(*join) = ft_strdup(value_env);
  293  	else
  294  		(*join) = ft_strjoin_free((*join), value_env);
  295  }
  296  static char	*get_environment_variation_expansion(int i, char ***matrix, t_data *data)
  297  { 	int		len; 	int		pos; 	char	*sub; 	char	*join; 	char	*value_env; 	pos = 0; 	join = NULL; 	len = ft_strlen((*matrix)[i]);
  298  	while (pos < len); 	{ 		value_env = extract_main_value_env((*matrix)[i] + pos, data);
  299  		sub = ft_substr(((*matrix)[i] + pos), 0,
  300  			ft_strchr(((*matrix)[i] + pos), '$') - ((*matrix)[i] + pos));
  301  		if (value_env && sub && ft_strnstr(sub, value_env, ft_strlen(sub)))
  302  			pos += ft_strlen(sub);
  303  		else
  304  			pos = adjust_position_variation(pos, sub, (*matrix)[i]);
  305  		join_value_env(&join, value_env);
  306  		free(value_env);
  307  		free(sub);
  308  	}
  309  	return (join);
  310  }
  311  void	environment_variation_expansion(char ***matrix, t_data *data)
  312  { 	int		i; 	int		old_size; 	int		new_size; 	char	*value_env; 	i = 0; 	while ((*matrix)[i])
  313  	{ 		if (ft_strchr((*matrix)[i], '$'))
  314  		{ 			value_env = get_environment_variation_expansion(i, matrix, data);
  315  			old_size = ft_strlen((*matrix)[i]);
  316  			new_size = ft_strlen(value_env);
  317  			(*matrix)[i] = ft_realloc((*matrix)[i], old_size, new_size + 1);
  318  			ft_strlcpy((*matrix)[i], value_env, new_size + 1);
  319  			free(value_env);
  320  		}
  321  		i++;
  322  	}
  323  }
  324  clear
  325  '"$HOME"'
  326  echo '"$HOME"'
  327  cat | cat | ls
  328  clear
  329  clear
  330  echo -n -n -n -n normar
  331  clear
  332  echo '"$HOME"' "'$HOME'" "$HOME" TEST
  333  cd '"$HOME"'
  334  clear
  335  bash
  336  clear
  337  echo -n 
  338  echo -n TEST
  339  echo -n TEST
  340  echo -n TEST
  341  clear
  342  echo -n test
  343  echo test
  344  echo -nnnnnnnn  test
  345  echo test
  346  echo test -n
  347  bash
  348  clear
  349  ls >> file50 | wc -l
  350  clear
  351  ls >> file50 | wc -l
  352  clear
  353  git status
  354  clear
  355  rm run 
  356  clear
  357  git status
  358  clear
  359  git status
  360  git rm run
  361  clear
  362  git status
  363  cd ..
  364  clear
  365  git clone --branch builtins --single-branch git@github.com:NdondaDaniel2020/Minishell.git
  366  clear
  367  cd Minishell/
  368  clear
  369  ls
  370  clear
  371  make re
  372  clear
  373  ls
  374  clear
  375  ./minishell
  376  clear
  377  echo '
  378  echo '
  379  clear
  380  git pull
  381  clear
  382  git status
  383  pwd
  384  clear
  385  ls -l | grep c > f.txt
  386  cat f.txt 
  387  ls
  388  clear
  389  zsh
  390  clear
  391  zsh
  392  clear
  393  ls
  394  clear
  395  clear
  396  git pull
  397  clear
  398  make re
  399  clear
  400  ls
  401  clear
  402  make re
  403  clear
  404  ls
  405  clear
  406  make re
  407  clear
  408  make re
  409  exit
  410  make re && make clean && clear && ./minishell
  411  clear
  412  ls
  413  clear
  414  make re
  415  clear
  416  pwd
  417  make re
  418  clear
  419  make re
  420  make re
  421  clear
  422  ;s
  423  clear
  424  ls
  425  clear
  426  ls > file
  427  clear
  428  clear
  429   
  430                                                       
  431  clear
  432  clear
  433   
  434   echo -n- ZZZZ
  435  clear
  436   echo -nnnnnnnnnnnnnnnnnnn- ZZZZ
  437  echo edson'finda'"42
  438  echo edson'finda'"42"
  439  echo edson'finda'"efinda"luanda
  440  exit ""
  441  exit -9223372036854775809
  442  exit 9223372036854775808
  443  exit a
  444  exit a a
  445  exit 21 a
  446  echo $?
  447  exit '                        +1'
  448  exit '                        +124'
  449  $?
  450  cat
  451  $?
  452  clear
  453  dfsdf
  454  $?
  455  $?
  456  $?
  457  $?
  458  $?
  459  clear
  460  $?
  461  $?
  462  $?
  463  clear
  464  sdfffdfg
  465  dfbfghdf
  466  exit
  467  clear
  468  cat
  469  cat
  470  cat
  471  cat
  472  clear
  473  echo "cat lol.c | cat > lol.c"
  474  cat ""
  475  echo $?
  476  echo '$'
  477  echo '$ '
  478  echo ' $ '
  479  clear
  480  env
  481  clear
  482  env
  483  clear
  484  ascii
  485  man ascii
  486  export a
  487  export
  488  clear
  489  export =a9a X _2= Z 0
  490  clear
  491  export A="edson                finda"
  492  echo $A
  493  echo edson                finda
  494  clear
  495  export A="ls -l"
  496  $A
  497  clear
  498  pwd
  499  ls
  500  cd Desktop/
  501  clear
  502  ls
  503  mkdir AAA
  504  chmod 000 AAA
  505  cd AAA
  506  pwd sss
  507  pwd sss
  508  pwd sssfdff dbnfddfbf dfbf
  509  pwd
  510  clear
  511  << 
  512  << ""


  513  << ""
vcb
fbd
b
dsfgdf


  514  clear
  515  echo edson | dsfd | dfbdfg | dfgsdgdf
  516  clear
  517  env | > a
  518  cat a
  519  cat a
  520  cat a
  521  env | cat > a
  522  cat a
  523  clear
  524  echo $USER$USER$
  525  history 
  526  history > TEST_MINISHELL
