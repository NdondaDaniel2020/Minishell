

void	update_pwd(t_data *data)
{
	/* add nivel de acesso*/
	char	*cwd;
	char	*pwd;
	char	*oldpwd;

	cwd = ft_calloc(5048, sizeof(char));
	if (!cwd)
		return ;
	getcwd(cwd, 5048);
	pwd = ft_strjoin("export PWD=", cwd);
	oldpwd = ft_strjoin("export OLDPWD=", cwd);
	free(cwd);
	data->automatic_input = true;
	data->btree = insert_into_btree(data->btree, 0, pwd);
	export(data);
	free_all_data(data);
	data->automatic_input = true;
	data->btree = insert_into_btree(data->btree, 0, oldpwd);
	export(data);
	free_all_data(data);
}


void	update_pwd_in_cd(t_data *data)
{
	/* add nivel de acesso*/
	int		i;
	int		len;
	char	*cwd;
	char	*pwd;
	char	*oldpwd;

	cwd = ft_calloc(5048, sizeof(char));
	if (!cwd)
		return ;
	i = 0;
	getcwd(cwd, 5048);
	pwd = ft_strjoin("export PWD=", cwd);
	while (data->envp[i])
	{
		if (!ft_strncmp(data->envp[i], "PWD", 3))
		{
			oldpwd = ft_strjoin("export OLD", data->envp[i]);
			break ;
		}
		i++;
	}
	free(cwd);
	len = len_btree(data->btree);
	data->automatic_input = true;
	data->btree = insert_into_btree(data->btree, len, pwd);
	export(data);
	data->btree = remove_tree(data->btree, len);

	data->automatic_input = true;
	data->btree = insert_into_btree(data->btree, len, oldpwd);
	export(data);
	data->btree = remove_tree(data->btree, len);
}

