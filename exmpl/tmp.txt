
/*  v1 */
void	master(char *command, t_data *data)
{
	int		i;
	int		pipefd[2];
	t_data	*cpy_data;

	cpy_data = data;
	insert_data(data, command);

	pipe(pipefd);
	data->copy_fd = dup(STDOUT_FILENO_1);
	while (data->btree)
	{
		//////////////////////////////////////////////////////////////////////////

		i = 0;
		if (ft_strlen_1(data->btree->content[i]) == 0)
			i++;
		
		//////////////////////////////////////////////////////////////////////////

		if (data->is_pipe && data->btree->right)
		{
			data->write_on_the_pipe = -1;
			data->read_in_the_pipe = pipefd[0];
			dup2(data->write_on_the_pipe, STDOUT_FILENO_1);
		}
		else if (data->is_pipe && !data->btree->right)
		{
			data->write_on_the_pipe = pipefd[1];
			data->read_in_the_pipe = -1;
			dup2(data->copy_fd, STDOUT_FILENO_1);
		}
		
		//////////////////////////////////////////////////////////////////////////

		ft_printf("[%s]\n", data->btree->content[i]);

		//////////////////////////////////////////////////////////////////////////

		if (!ft_strncmp(data->btree->content[i], "exit", ft_strlen_1(data->btree->content[i])))
			exit_(data);
		else if (!ft_strncmp(data->btree->content[i], "pwd", ft_strlen_1(data->btree->content[i])))
			pwd(data);
		else if (!ft_strncmp(data->btree->content[i], "cd", ft_strlen_1(data->btree->content[i])))
			cd(data);
		else if (!ft_strncmp(data->btree->content[i], "echo", ft_strlen_1(data->btree->content[i])))
			echo(data);
		else if (!ft_strncmp(data->btree->content[i], "env", ft_strlen_1(data->btree->content[i])))
			env(data);
		else if (!ft_strncmp(data->btree->content[i], "export", ft_strlen_1(data->btree->content[i])))
			export(data);
		else if (!ft_strncmp(data->btree->content[i], "unset", ft_strlen_1(data->btree->content[i])))
			unset(data);
		else
			other_command(data);
		
		/////////////////////////////////////////////////////////////////////////
		
		data->btree = data->btree->right;
	}

	free_all_data(cpy_data);
}





/* v2 */

void	master(char *command, t_data *data)
{
	int		i;
	int		pid;
	char	*path;
	t_btree	*aux;

	insert_data(data, command);
	aux = data->btree;
	path = NULL;
	while (aux)
	{
		//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		
		i = 0;
		if (ft_strlen_1(aux->content[i]) == 0)
			i++;
		
		/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		
		if (ft_strnstr(aux->content[i], "/", ft_strlen_1(aux->content[i])) ||
			list_builtins(aux->content[i]))
			path = ft_strdup(aux->content[i]);
		else
			path = get_valid_path(data);

		/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		pid = fork();
		if (pid == 0)
		{
			/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			if (path == NULL)
			{
				/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
				change_environment_variables_question_mark(127, data);
				write(2, "command not found: \n", 20);
				ft_putstr_fd(aux->content[i], 2);

				/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
				if (data->path)
					free_mtx(data->path);
				if (data->envp)
					free_mtx(data->envp);
				free_all_data(data);
				/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
				
				exit(127);
				/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			}
			else if (!ft_strncmp(aux->content[i], "exit", ft_strlen_1(aux->content[i])))
			{
				free(path);
				exit_(data);
			}
			else if (!ft_strncmp(aux->content[i], "pwd", ft_strlen_1(aux->content[i])))
				pwd(data);
			else if (!ft_strncmp(aux->content[i], "cd", ft_strlen_1(aux->content[i])))
				cd(data);
			else if (!ft_strncmp(aux->content[i], "echo", ft_strlen_1(aux->content[i])))
				echo(data);
			else if (!ft_strncmp(aux->content[i], "env", ft_strlen_1(aux->content[i])))
				env(data);
			else if (!ft_strncmp(aux->content[i], "export", ft_strlen_1(aux->content[i])))
				export(data);
			else if (!ft_strncmp(aux->content[i], "unset", ft_strlen_1(aux->content[i])))
				unset(data);
			else
				execve(path, aux->content, data->envp);

			change_environment_variables_question_mark(0, data);
			
			if (data->path)
				free_mtx(data->path);
			if (data->envp)
				free_mtx(data->envp);
			
			free_all_data(data);
			
			free(path);
			
			exit(0);
			///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		}
		else
		{
			wait(NULL);
			free(path);
			aux = aux->right;
		}
		///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	}
	// ft_printf("|\n\n\n\n\n\n\n\n\n\n\n|");
	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	// if (!ft_strncmp(aux->content[i], "exit", ft_strlen_1(aux->content[i])))
	// {
	// 	if (data->path)
	// 	{
	// 		free_mtx(data->path);
	// 		data->path = NULL;
	// 	}
	// 	if (data->envp)
	// 	{
	// 		free_mtx(data->envp);
	// 		data->envp = NULL;
	// 	}
	// }
	// free_all_data(data);
	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
}





336  echo "$USER"
  338  echo "$"USER
  339  echo edson "                             " finda
  340  echo '$USER'
  341  echo '$'USER
  350  echo $DISPLAY
  352  echo $DISPLAY
  364  echo $OLDPWD
  368  echo $OLDPWD
  370  echo $HOM ASDF kljakdfjasd
  372  echo $HOM ASDF kljakdfjasd
  373  echo $
  374  echo $HOM
  375  echo $?
  378  echo $?
  380  echo | ls
  381  ls | echo
  414                  echo_1.c \
  415                  echo_2.c \
  416                  echo_3.c \
  458  cat Makefile | echo
  460  cat Makefile | echo
  461  echo Makefile 
  462  echo $Makefile 
  489  echo "TEST $HOME"
  517  echo '"$HOME"' "'$HOME'" "$HOME" TEST
  518  echo '  "  $HOME  "   ' "'$HOME'" "$HOME" TEST
  519  echo '"$HOME"' "'$HOME'" "$HOME" TEST   
  520  echo 1 '"$HOME"' 2 "'$HOME'" 3 "$HOME" 4 TEST 
  522  echo '$HOME'
  523  echo '$HOME
  525  echo '$HOME'
  526  echo 1 '"$HOME"' 2 "'$HOME'" 3 "$HOME" 4 TEST 
  528  echo 1 '"$HOME"' 2 "'$HOME'" 3 "$HOME" 4 TEST 
  529  echo 1 '   "   $HOME   "   ' 2 "   '   $HOME   '   " 3 "   $HOME   " 4 TEST 
  530  echo 1 '"$HOME"' 2 "'$HOME'" 3 "$HOME" 4 TEST 
  532  echo '$HOME'
  534  echo 1 '"$HOME"' 2 "'$HOME'" 3 "$HOME" 4 TEST 
  535  echo 'asdfasd""'
  536  echo "$HOME"
  538  echo 1 '"$HOME"' 2 "'$HOME'" 3 "$HOME" 4 TEST 
  540  echo 1 '"$HOME"' 2 "'$HOME'" 3 "$HOME" 4 TEST 
  541  echo 1 '"$HOME"' 2 "'$HOME'" 3 "$HOME" 4 TEST
  543  echo 1 '"$HOME"' 2 "'$HOME'" 3 "$HOME" 4 TEST
  547  echo "'"$HOME"' "'$HOME'"" "'"$HOME"' "'$HOME'"" "$HOME" "$HOME"
  549  echo "'"$HOME"' "'$HOME'"" "'"$HOME"' "'$HOME'"" "$HOME" "$HOME"
  550  echo "'"$HOME"' "'$HOME'"" '"$HOME"' "'$HOME'" "$HOME" "$HOME"
  552  echo "'"$HOME"' "'$HOME'"" '"$HOME"' "'$HOME'" "$HOME" "$HOME"
  553  echo "'"$HOME"' "'$HOME'"" '"$HOME"' "'$HOME'" "$HOME" "$HOME" '$HOME'
  555  echo "'"$HOME"' "'$HOME'"" '"$HOME"' "'$HOME'" "$HOME" "$HOME" '$HOME'
  556  echo "'"$HOME"' "'$HOME'""
  557  echo '"$HOME"'
  558  echo "'$HOME'" 
  559  echo "$HOME"
  560  echo '$HOME'
  562  echo "'"$HOME"' "'$HOME'""
  563  echo '"$HOME"'
  564  echo "'$HOME'" 
  565  echo "$HOME"
  566  echo '$HOME'
  567  echo "'"   $HOME   "' "'   $HOME   '"" '"  $HOME  "' "'  $HOME  '" "$HOME" '$HOME'
  569  echo "'"   $HOME   "' "'   $HOME   '"" '"  $HOME  "' "'  $HOME  '" "$HOME" '$HOME'
  570  echo "'"   $HOME   "' "'   $HOME   '"" '"  $HOME  "' "'  $HOME  '" "    $HOME    " '    $HOME   '
  572  echo " ' "   $HOME   " ' " '   $HOME   ' " " ' "  $HOME  " ' " '  $HOME  ' " "   $HOME   " '   $HOME   '

\" ' \"   $HOME   \" ' \" '   $HOME   ' \" \" ' \"  $HOME  \" ' \" '  $HOME  ' \" \"   $HOME   \" '   $HOME   '

  600  echo $?
  612  echo $/
  613  echo $?
  616  echo $?
  630  echo $?
  632  echo $?
  639  echo $?
  646  echo $?
  716  echo TEST de alguma coisa > as
  717  echoTEST
  719  echo ASDF asdf > file.txt MASSA FRESCA
  796  echo <> file
  797  echo < file test de algo estranho > file
  799  echo < file.txt test de algo estranho > file2.xtx
  800  echo < file test de algo estranho > file2.xtx
  802  echo < file
  804  echo < file
  866  echo "File test de algo estranho" > file.txt
  870  echo < file.txt 
  872  echo < file.txt 
  873  echo > file.txt 
  874  echo < file.txt 
  881  echo <file
  882  echo < file
  889  echo < file
  896  echo < file1 < file11 > file12
  897  echo < file1 > file11 > file12 < file12
  898  echo < file1 > file11 > file12 < file2
  905  echo "TEST" <> file90
  932  echo TEST <> file40
 1009  echo | |
 1011  echo | |
 1016  echo || grep um
 1017  echo | | grep um
 1021  echo | EOF
 1024  echo |  EOF
 1026  echo |
 1028  echo |
 1030  echo | 
 1033  echo |
 1034  echo | 
 1036  echo "TEST de algo muito" |  wc -l
 1037  echo "TEST de algo muito" |  
 1039  echo |
 1041  echo | EOF
 1043  echo | EOF
 1044  echo |  EOF
 1047  echo |   grep
 1049  echo | 
 1051  echo | 
 1053  echo |
 1055  echo |               
 1064  echo ls$HOME
 1066  echo ls$HOME'file'
 1067  echo ls$HOME''file''
 1068  echo ls$HOME'''file'''
 1069  echo ls$HOME"file"
 1070  echo ls$HOME""file""
 1071  echo ls$HOME""''file''""
 1072  echo ls$HOME"''file''"
 1074  echo ls$HOME"''file''"
 1075  echo ls$HOME''"file"''
 1076  echo ls$HOME"''file''"
 1078  echo ls$HOME"''file''"
 1079  echo ls$HOME""''file''""
 1080  echo ls$HOME"''file''"
 1082  echo ls$HOME"''file''"
 1083  echo ls$HOME''"file"''
 1084  echo ls$HOME'"file"'
 1086  echo ''ls''$HOME'"file"'
 1087  echo "''ls''"$HOME'"file"'
 1088  echo:""''ls''""$HOME'"file"'

 echo:ls$HOME\"\"''file''\"\"

 1089  echo "''ls''"$HOME'"file"'
 1093  echo ls$USER
 1094  echo ls$USERS
 1096  echo "''ls''"$HOME'"file"'
 1097  echo "''ls''"$HOME''"file"''
 1099  echo "''ls''"$HOME''"file"''
 1100  echo "''ls''"$HOME"''ls''"
 1102  echo "''ls''"$HOME"''ls''"
 1109  echo -n "test"
 1110  echo "test"
 1113  echo "test" | echo
 1114  echo "test" | ech
 1115  echo "test" | grep echo
 1118  history | grep echo
 1120  history | grep echo
